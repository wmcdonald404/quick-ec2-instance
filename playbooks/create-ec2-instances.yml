# playbooks/create-x86-ec2-instances.yml

- name: create sandbox instances
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    arch: x86
    release: rhel8

  tasks:
    - name: create a config directory for awscli
      file:
        path: ~/.aws/
        state: directory
        mode: 0700

    - name: configure defaults for awscli from group_vars
      template:
        src: "{{ item }}.j2"
        dest: "~/.aws/{{ item }}"
        mode: 0600
      with_items:
        - config
        - credentials

    - name: gather facts from the ec2 virtual private cloud
      ec2_vpc_net_info:
        filters:
          isDefault: "true"
        region: "{{ ec2_region }}"
      register: ec2_vpc_net_info

    - name: gather ec2 subnet facts
      ec2_vpc_subnet_info:
        filters:
          defaultForAz: "true"
        region: "{{ ec2_region }}"
      register: ec2_vpc_subnet_info
    
    - name: provision ec2 sandbox instance(s)
      amazon.aws.ec2_instance:
        exact_count: "{{ ec2_instance_count }}"
        key_name: "{{ ec2_keypair }}"
        image_id: "{{ ec2_image }}"
        tags: "{{ ec2_instance_tag }}"
        instance_type: "{{ ec2_instance_type }}"
        network:
          assign_public_ip: true
        region: "{{ ec2_region }}"
        security_group: "{{ ec2_group }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              delete_on_termination: true
              volume_type: gp2
              volume_size: 60
        vpc_subnet_id: "{{ ec2_vpc_subnet_info.subnets[0].subnet_id }}"
        wait: true
      register: ec2

    - name: sandbox instance hostname(s)
      ansible.builtin.debug:
        var: ec2.instances
        # var: item.instances
      #loop: "{{ ec2 }}"

# vim:sw=2:ts=2:et

